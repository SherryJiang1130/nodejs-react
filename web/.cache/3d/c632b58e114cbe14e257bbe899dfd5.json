{"id":"../node_modules/react-input-color/dist/input-color.js","dependencies":[{"name":"D:\\myPro\\nodePro\\web\\package.json","includedInParent":true,"mtime":1543199527068},{"name":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\package.json","includedInParent":true,"mtime":1543198981810},{"name":"classnames","loc":{"line":3,"column":17},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\input-color.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\classnames\\index.js"},{"name":"react","loc":{"line":4,"column":20},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\input-color.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\react\\index.js"},{"name":"react-dom","loc":{"line":5,"column":23},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\input-color.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\react-dom\\index.js"},{"name":"object-assign","loc":{"line":6,"column":21},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\input-color.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\object-assign\\index.js"},{"name":"color-functions/dist/css-color","loc":{"line":7,"column":23},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\input-color.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\color-functions\\dist\\css-color.js"},{"name":"color-functions/dist/rgba","loc":{"line":8,"column":24},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\input-color.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\color-functions\\dist\\rgba.js"},{"name":"color-functions/dist/rgb2hsv","loc":{"line":9,"column":22},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\input-color.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\color-functions\\dist\\rgb2hsv.js"},{"name":"color-functions/dist/rgb2hex","loc":{"line":10,"column":22},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\input-color.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\color-functions\\dist\\rgb2hex.js"},{"name":"color-functions/dist/rgba2hex","loc":{"line":11,"column":23},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\input-color.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\color-functions\\dist\\rgba2hex.js"},{"name":"./color-picker.js","loc":{"line":13,"column":26},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\input-color.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\color-picker.js"}],"generated":{"js":"'use strict';\n\nvar cx = require('classnames');\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar assign = require('object-assign');\nvar cssColor = require('color-functions/dist/css-color');\nvar rgbaColor = require('color-functions/dist/rgba');\nvar rgb2hsv = require('color-functions/dist/rgb2hsv');\nvar rgb2hex = require('color-functions/dist/rgb2hex');\nvar rgba2hex = require('color-functions/dist/rgba2hex');\n\nvar ColorPicker = require('./color-picker.js');\n\nvar KEY_ENTER = 13;\n\nmodule.exports = React.createClass({\n  displayName: 'InputColor',\n\n  propTypes: {\n    value: React.PropTypes.string,\n    defaultValue: React.PropTypes.string\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      defaultValue: '#000000'\n    };\n  },\n  getInitialState: function getInitialState() {\n    var cssColor = this.props.value;\n\n    return {\n      color: this.getColor(this.props.value),\n      colorPicker: false,\n      colorPickerPosition: 0\n    };\n  },\n  getColor: function getColor(color) {\n    color = color || this.props.defaultValue;\n\n    var rgba = cssColor(color);\n    var r = rgba.r,\n        g = rgba.g,\n        b = rgba.b,\n        a = rgba.a;\n    var hsv = rgb2hsv(r, g, b);\n\n    return assign(hsv, {\n      r: r,\n      g: g,\n      b: b,\n      a: a,\n      hex: rgb2hex(r, g, b)\n    });\n  },\n  getRgbaBackground: function getRgbaBackground() {\n    var color = this.state.color;\n    var r = color.r;\n    var g = color.g;\n    var b = color.b;\n    var a = color.a;\n    return rgbaColor(r, g, b, a);\n  },\n  render: function render() {\n    var color = this.state.color;\n    var rgbaBackground = this.getRgbaBackground();\n\n    return React.createElement(\n      'span',\n      {\n        className: cx('m-input-color', {\n          'color-picker-open': this.state.colorPicker\n        })\n      },\n      React.createElement('span', {\n        className: 'css-color',\n        style: { background: rgbaBackground },\n        onClick: this._onClick\n      }),\n      React.createElement(\n        'span',\n        { className: 'remove', onClick: this.handleClickRemove },\n        '\\xD7'\n      ),\n      this.state.colorPicker ? React.createElement(ColorPicker, {\n        left: this.state.colorPickerPosition,\n        color: this.state.color,\n        onChange: this._onChange\n      }) : null\n    );\n  },\n  componentDidMount: function componentDidMount() {\n    document.addEventListener('click', this.closeColorPicker, false);\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    document.removeEventListener('click', this.closeColorPicker);\n  },\n  closeColorPicker: function closeColorPicker() {\n    this.setState({ colorPicker: false });\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    var cssColor = nextProps.value;\n\n    // anti-pattern, maybe\n    if (!this._updated) {\n      this.setState({\n        color: this.getColor(cssColor)\n      });\n    } else {\n      this._updated = false;\n    }\n  },\n  change: function change(cssColor) {\n    if (this.props.onChange) {\n      this.props.onChange(cssColor);\n    }\n  },\n  _onChange: function _onChange(color) {\n    this.setState({\n      cssColor: '#' + color.hex,\n      color: color\n    });\n\n    this._updated = true;\n    this.change('#' + rgba2hex(color.r, color.g, color.b, color.a));\n  },\n  _onClick: function _onClick(e) {\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n    var dom = ReactDOM.findDOMNode(this);\n    var rect = dom.getBoundingClientRect();\n    var ww = window.innerWidth;\n\n    var left = -105;\n    if (rect.right + 105 > ww) {\n      left = -210 + ww - rect.right;\n    } else if (rect.left - 105 < 0) {\n      left = -rect.left;\n    }\n\n    this.setState({\n      colorPicker: !this.state.colorPicker,\n      colorPickerPosition: left\n    });\n  },\n  handleClickRemove: function handleClickRemove(e) {\n    this.change('');\n  }\n});","map":null},"hash":"753114143f9bdfaea44974ac293ce7a0","cacheData":{"env":{}}}