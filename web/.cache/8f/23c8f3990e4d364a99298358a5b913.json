{"id":"../node_modules/lodash/forEach.js","dependencies":[{"name":"D:\\myPro\\nodePro\\web\\package.json","includedInParent":true,"mtime":1543199527068},{"name":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1542352705058},{"name":"./_arrayEach","loc":{"line":1,"column":24},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\forEach.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_arrayEach.js"},{"name":"./_baseEach","loc":{"line":2,"column":23},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\forEach.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_baseEach.js"},{"name":"./_castFunction","loc":{"line":3,"column":27},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\forEach.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_castFunction.js"},{"name":"./isArray","loc":{"line":4,"column":22},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\forEach.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\isArray.js"}],"generated":{"js":"var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;\n","map":null},"hash":"21cb6cc0852916cacd9c6c98c5e3bdba","cacheData":{"env":{}}}