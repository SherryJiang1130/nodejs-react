{"id":"../node_modules/lodash/_toKey.js","dependencies":[{"name":"D:\\myPro\\nodePro\\web\\package.json","includedInParent":true,"mtime":1543199527068},{"name":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1542352705058},{"name":"./isSymbol","loc":{"line":1,"column":23},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_toKey.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\isSymbol.js"}],"generated":{"js":"var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","map":null},"hash":"61535be5d3c0625d1572259e44bd2bd8","cacheData":{"env":{}}}