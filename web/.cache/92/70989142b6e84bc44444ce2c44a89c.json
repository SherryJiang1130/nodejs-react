{"id":"../node_modules/lodash/_baseKeys.js","dependencies":[{"name":"D:\\myPro\\nodePro\\web\\package.json","includedInParent":true,"mtime":1543199527068},{"name":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1542352705058},{"name":"./_isPrototype","loc":{"line":1,"column":26},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_baseKeys.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_isPrototype.js"},{"name":"./_nativeKeys","loc":{"line":2,"column":25},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_baseKeys.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_nativeKeys.js"}],"generated":{"js":"var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","map":null},"hash":"69913584f2d78a9edc099ed67fe73566","cacheData":{"env":{}}}