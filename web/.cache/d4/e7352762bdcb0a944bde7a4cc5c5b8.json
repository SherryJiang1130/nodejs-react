{"id":"../node_modules/react-input-color/dist/color-picker.js","dependencies":[{"name":"D:\\myPro\\nodePro\\web\\package.json","includedInParent":true,"mtime":1543199527068},{"name":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\package.json","includedInParent":true,"mtime":1543198981810},{"name":"react","loc":{"line":3,"column":20},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\color-picker.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\react\\index.js"},{"name":"object-assign","loc":{"line":4,"column":27},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\color-picker.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\object-assign\\index.js"},{"name":"react-input-slider","loc":{"line":5,"column":26},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\color-picker.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-slider\\index.js"},{"name":"react-input-number","loc":{"line":6,"column":26},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\color-picker.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-number\\index.js"},{"name":"color-functions/dist/rgb2hsv","loc":{"line":8,"column":22},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\color-picker.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\color-functions\\dist\\rgb2hsv.js"},{"name":"color-functions/dist/hsv2hex","loc":{"line":9,"column":22},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\color-picker.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\color-functions\\dist\\hsv2hex.js"},{"name":"color-functions/dist/hsv2rgb","loc":{"line":10,"column":22},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\color-picker.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\color-functions\\dist\\hsv2rgb.js"},{"name":"color-functions/dist/rgb2hex","loc":{"line":11,"column":22},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\color-picker.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\color-functions\\dist\\rgb2hex.js"},{"name":"color-functions/dist/hex2rgb","loc":{"line":12,"column":22},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\color-picker.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\color-functions\\dist\\hex2rgb.js"},{"name":"color-functions/dist/rgba","loc":{"line":13,"column":19},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\react-input-color\\dist\\color-picker.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\color-functions\\dist\\rgba.js"}],"generated":{"js":"'use strict';\n\nvar React = require('react');\nvar objectAssign = require('object-assign');\nvar InputSlider = require('react-input-slider');\nvar InputNumber = require('react-input-number');\n\nvar rgb2hsv = require('color-functions/dist/rgb2hsv');\nvar hsv2hex = require('color-functions/dist/hsv2hex');\nvar hsv2rgb = require('color-functions/dist/hsv2rgb');\nvar rgb2hex = require('color-functions/dist/rgb2hex');\nvar hex2rgb = require('color-functions/dist/hex2rgb');\nvar rgba = require('color-functions/dist/rgba');\n\nvar KEY_ENTER = 13;\n\nmodule.exports = React.createClass({\n  displayName: 'ColorPicker',\n\n  getInitialState: function getInitialState() {\n    return {\n      hex: this.props.color.hex,\n      hsvMode: false\n    };\n  },\n  render: function render() {\n    var color = this.props.color;\n    var r = color.r,\n        g = color.g,\n        b = color.b;\n    var h = color.h,\n        s = color.s,\n        v = color.v;\n    var a = color.a,\n        hex = color.hex;\n\n    var rgbaBackground = rgba(r, g, b, a);\n    var opacityGradient = 'linear-gradient(to right, ' + rgba(r, g, b, 0) + ', ' + rgba(r, g, b, 100) + ')';\n    var hueBackground = '#' + hsv2hex(h, 100, 100);\n\n    return React.createElement(\n      'div',\n      {\n        className: 'm-color-picker',\n        style: { left: this.props.left },\n        onClick: this._onClick\n      },\n      React.createElement(\n        'div',\n        { className: 'selector', style: { backgroundColor: hueBackground } },\n        React.createElement('div', { className: 'gradient white' }),\n        React.createElement('div', { className: 'gradient dark' }),\n        React.createElement(InputSlider, {\n          className: 'slider slider-xy',\n          axis: 'xy',\n          x: s,\n          xmax: 100,\n          y: 100 - v,\n          ymax: 100,\n          onChange: this._onSVChange\n        })\n      ),\n      React.createElement(\n        'div',\n        { className: 'sliders' },\n        React.createElement(InputSlider, {\n          className: 'slider slider-x hue',\n          axis: 'x',\n          x: h,\n          xmax: 359,\n          onChange: this._onHueChange\n        }),\n        React.createElement(InputSlider, {\n          className: 'slider slider-x opacity',\n          axis: 'x',\n          x: a,\n          xmax: 100,\n          style: { background: opacityGradient },\n          onChange: this._onAlphaChange\n        }),\n        React.createElement('div', { className: 'color', style: { backgroundColor: rgbaBackground } })\n      ),\n      React.createElement(\n        'div',\n        { className: 'inputs' },\n        React.createElement(\n          'div',\n          { className: 'input hex' },\n          React.createElement('input', {\n            type: 'text',\n            className: 'value',\n            value: this.state.hex,\n            onChange: this._onHexChange,\n            onKeyUp: this._onHexKeyUp\n          }),\n          React.createElement(\n            'span',\n            { className: 'label' },\n            'Hex'\n          )\n        ),\n        !this.state.hsvMode ? React.createElement(\n          'div',\n          null,\n          React.createElement(\n            'div',\n            { className: 'input r' },\n            React.createElement(InputNumber, {\n              className: 'value',\n              value: r,\n              onChange: this.changeRGB.bind(null, 'r')\n            }),\n            React.createElement(\n              'span',\n              { className: 'label' },\n              'R'\n            )\n          ),\n          React.createElement(\n            'div',\n            { className: 'input g' },\n            React.createElement(InputNumber, {\n              className: 'value',\n              value: g,\n              onChange: this.changeRGB.bind(null, 'g')\n            }),\n            React.createElement(\n              'span',\n              { className: 'label' },\n              'G'\n            )\n          ),\n          React.createElement(\n            'div',\n            { className: 'input b' },\n            React.createElement(InputNumber, {\n              className: 'value',\n              value: b,\n              onChange: this.changeRGB.bind(null, 'b')\n            }),\n            React.createElement(\n              'span',\n              { className: 'label' },\n              'B'\n            )\n          )\n        ) : React.createElement(\n          'div',\n          null,\n          React.createElement(\n            'div',\n            { className: 'input h' },\n            React.createElement(InputNumber, {\n              className: 'value',\n              value: h,\n              onChange: this.changeHSV.bind(null, 'h')\n            }),\n            React.createElement(\n              'span',\n              { className: 'label' },\n              'H'\n            )\n          ),\n          React.createElement(\n            'div',\n            { className: 'input s' },\n            React.createElement(InputNumber, {\n              className: 'value',\n              value: s,\n              onChange: this.changeHSV.bind(null, 's')\n            }),\n            React.createElement(\n              'span',\n              { className: 'label' },\n              'S'\n            )\n          ),\n          React.createElement(\n            'div',\n            { className: 'input v' },\n            React.createElement(InputNumber, {\n              className: 'value',\n              value: v,\n              onChange: this.changeHSV.bind(null, 'v')\n            }),\n            React.createElement(\n              'span',\n              { className: 'label' },\n              'V'\n            )\n          )\n        ),\n        React.createElement(\n          'div',\n          { className: 'input a' },\n          React.createElement(InputNumber, {\n            className: 'value',\n            value: a,\n            onChange: this.changeAlpha\n          }),\n          React.createElement(\n            'span',\n            { className: 'label' },\n            'A'\n          )\n        )\n      )\n    );\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    var hex = nextProps.color.hex;\n    this.setState({\n      hex: hex\n    });\n  },\n  changeHSV: function changeHSV(p, val) {\n    if (this.props.onChange) {\n      var j = p;\n      if (typeof j === 'string') {\n        j = {};\n        j[p] = val;\n      }\n      var color = this.props.color;\n      var rgb = hsv2rgb(j.h || color.h, j.s || color.s, j.v || color.v);\n      var hex = rgb2hex(rgb.r, rgb.g, rgb.b);\n      this.props.onChange(objectAssign(color, j, rgb, { hex: hex }));\n    }\n  },\n  changeRGB: function changeRGB(p, val) {\n    if (this.props.onChange) {\n      var j = p;\n      if (typeof j === 'string') {\n        j = {};\n        j[p] = val;\n      }\n\n      var color = this.props.color;\n      var rgb = [j.r !== void 0 ? j.r : color.r, j.g !== void 0 ? j.g : color.g, j.b !== void 0 ? j.b : color.b];\n\n      var hsv = rgb2hsv.apply(null, rgb);\n      var hex = rgb2hex.apply(null, rgb);\n\n      this.props.onChange(objectAssign(color, j, hsv, { hex: hex }));\n    }\n  },\n  changeAlpha: function changeAlpha(a) {\n    if (this.props.onChange) {\n      if (a <= 100 && a >= 0) {\n        this.props.onChange(objectAssign(this.props.color, { a: a }));\n      }\n    }\n  },\n  _onSVChange: function _onSVChange(pos) {\n    this.changeHSV({\n      s: pos.x,\n      v: 100 - pos.y\n    });\n  },\n  _onHueChange: function _onHueChange(pos) {\n    this.changeHSV({\n      h: pos.x\n    });\n  },\n  _onAlphaChange: function _onAlphaChange(pos) {\n    this.changeHSV({\n      a: parseInt(pos.x, 10)\n    });\n  },\n  _onHexChange: function _onHexChange(e) {\n    this.setState({\n      hex: e.target.value.trim()\n    });\n  },\n  _onHexKeyUp: function _onHexKeyUp(e) {\n    if (e.keyCode === KEY_ENTER) {\n      var hex = e.target.value.trim();\n      var rgb = hex2rgb(hex);\n      this.changeRGB(objectAssign(rgb, { hex: hex }));\n    }\n  },\n  _onClick: function _onClick(e) {\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n  }\n});","map":null},"hash":"2ae67fb5a26df1d8c2a6164d4058eae6","cacheData":{"env":{}}}