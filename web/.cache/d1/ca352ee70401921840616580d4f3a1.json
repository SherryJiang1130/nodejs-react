{"id":"../node_modules/lodash/_hasPath.js","dependencies":[{"name":"D:\\myPro\\nodePro\\web\\package.json","includedInParent":true,"mtime":1543199527068},{"name":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1542352705058},{"name":"./_castPath","loc":{"line":1,"column":23},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_hasPath.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_castPath.js"},{"name":"./isArguments","loc":{"line":2,"column":26},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_hasPath.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\isArguments.js"},{"name":"./isArray","loc":{"line":3,"column":22},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_hasPath.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\isArray.js"},{"name":"./_isIndex","loc":{"line":4,"column":22},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_hasPath.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_isIndex.js"},{"name":"./isLength","loc":{"line":5,"column":23},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_hasPath.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\isLength.js"},{"name":"./_toKey","loc":{"line":6,"column":20},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_hasPath.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_toKey.js"}],"generated":{"js":"var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","map":null},"hash":"16bc97f7f49e8c525d55162707f576ac","cacheData":{"env":{}}}