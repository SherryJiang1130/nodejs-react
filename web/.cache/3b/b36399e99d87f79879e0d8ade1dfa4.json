{"id":"../node_modules/draft-js/lib/DraftEditorDragHandler.js","dependencies":[{"name":"D:\\myPro\\nodePro\\web\\package.json","includedInParent":true,"mtime":1543199527068},{"name":"D:\\myPro\\nodePro\\web\\node_modules\\draft-js\\package.json","includedInParent":true,"mtime":1542353447145},{"name":"fbjs/lib/DataTransfer","loc":{"line":16,"column":27},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\draft-js\\lib\\DraftEditorDragHandler.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\fbjs\\lib\\DataTransfer.js"},{"name":"./DraftModifier","loc":{"line":17,"column":28},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\draft-js\\lib\\DraftEditorDragHandler.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\draft-js\\lib\\DraftModifier.js"},{"name":"./EditorState","loc":{"line":18,"column":26},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\draft-js\\lib\\DraftEditorDragHandler.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\draft-js\\lib\\EditorState.js"},{"name":"./findAncestorOffsetKey","loc":{"line":20,"column":36},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\draft-js\\lib\\DraftEditorDragHandler.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\draft-js\\lib\\findAncestorOffsetKey.js"},{"name":"./getTextContentFromFiles","loc":{"line":21,"column":38},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\draft-js\\lib\\DraftEditorDragHandler.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\draft-js\\lib\\getTextContentFromFiles.js"},{"name":"./getUpdatedSelectionState","loc":{"line":22,"column":39},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\draft-js\\lib\\DraftEditorDragHandler.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\draft-js\\lib\\getUpdatedSelectionState.js"},{"name":"./isEventHandled","loc":{"line":23,"column":29},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\draft-js\\lib\\DraftEditorDragHandler.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\draft-js\\lib\\isEventHandled.js"},{"name":"fbjs/lib/nullthrows","loc":{"line":24,"column":25},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\draft-js\\lib\\DraftEditorDragHandler.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\fbjs\\lib\\nullthrows.js"}],"generated":{"js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftEditorDragHandler\n * @format\n * \n */\n\n'use strict';\n\nvar DataTransfer = require('fbjs/lib/DataTransfer');\nvar DraftModifier = require('./DraftModifier');\nvar EditorState = require('./EditorState');\n\nvar findAncestorOffsetKey = require('./findAncestorOffsetKey');\nvar getTextContentFromFiles = require('./getTextContentFromFiles');\nvar getUpdatedSelectionState = require('./getUpdatedSelectionState');\nvar isEventHandled = require('./isEventHandled');\nvar nullthrows = require('fbjs/lib/nullthrows');\n\n/**\n * Get a SelectionState for the supplied mouse event.\n */\nfunction getSelectionForEvent(event, editorState) {\n  var node = null;\n  var offset = null;\n\n  if (typeof document.caretRangeFromPoint === 'function') {\n    var dropRange = document.caretRangeFromPoint(event.x, event.y);\n    node = dropRange.startContainer;\n    offset = dropRange.startOffset;\n  } else if (event.rangeParent) {\n    node = event.rangeParent;\n    offset = event.rangeOffset;\n  } else {\n    return null;\n  }\n\n  node = nullthrows(node);\n  offset = nullthrows(offset);\n  var offsetKey = nullthrows(findAncestorOffsetKey(node));\n\n  return getUpdatedSelectionState(editorState, offsetKey, offset, offsetKey, offset);\n}\n\nvar DraftEditorDragHandler = {\n  /**\n   * Drag originating from input terminated.\n   */\n  onDragEnd: function onDragEnd(editor) {\n    editor.exitCurrentMode();\n  },\n\n  /**\n   * Handle data being dropped.\n   */\n  onDrop: function onDrop(editor, e) {\n    var data = new DataTransfer(e.nativeEvent.dataTransfer);\n\n    var editorState = editor._latestEditorState;\n    var dropSelection = getSelectionForEvent(e.nativeEvent, editorState);\n\n    e.preventDefault();\n    editor.exitCurrentMode();\n\n    if (dropSelection == null) {\n      return;\n    }\n\n    var files = data.getFiles();\n    if (files.length > 0) {\n      if (editor.props.handleDroppedFiles && isEventHandled(editor.props.handleDroppedFiles(dropSelection, files))) {\n        return;\n      }\n\n      getTextContentFromFiles(files, function (fileText) {\n        fileText && editor.update(insertTextAtSelection(editorState, dropSelection, fileText));\n      });\n      return;\n    }\n\n    var dragType = editor._internalDrag ? 'internal' : 'external';\n    if (editor.props.handleDrop && isEventHandled(editor.props.handleDrop(dropSelection, data, dragType))) {\n      return;\n    }\n\n    if (editor._internalDrag) {\n      editor.update(moveText(editorState, dropSelection));\n      return;\n    }\n\n    editor.update(insertTextAtSelection(editorState, dropSelection, data.getText()));\n  }\n};\n\nfunction moveText(editorState, targetSelection) {\n  var newContentState = DraftModifier.moveText(editorState.getCurrentContent(), editorState.getSelection(), targetSelection);\n  return EditorState.push(editorState, newContentState, 'insert-fragment');\n}\n\n/**\n * Insert text at a specified selection.\n */\nfunction insertTextAtSelection(editorState, selection, text) {\n  var newContentState = DraftModifier.insertText(editorState.getCurrentContent(), selection, text, editorState.getCurrentInlineStyle());\n  return EditorState.push(editorState, newContentState, 'insert-fragment');\n}\n\nmodule.exports = DraftEditorDragHandler;","map":null},"hash":"d6a88af90db8e9080cc5023c6bcc2f52","cacheData":{"env":{}}}