{"id":"../node_modules/lodash/_initCloneByTag.js","dependencies":[{"name":"D:\\myPro\\nodePro\\web\\package.json","includedInParent":true,"mtime":1543199527068},{"name":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1542352705058},{"name":"./_cloneArrayBuffer","loc":{"line":1,"column":31},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_initCloneByTag.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_cloneArrayBuffer.js"},{"name":"./_cloneDataView","loc":{"line":2,"column":28},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_initCloneByTag.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_cloneDataView.js"},{"name":"./_cloneRegExp","loc":{"line":3,"column":26},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_initCloneByTag.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_cloneRegExp.js"},{"name":"./_cloneSymbol","loc":{"line":4,"column":26},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_initCloneByTag.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_cloneSymbol.js"},{"name":"./_cloneTypedArray","loc":{"line":5,"column":30},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_initCloneByTag.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_cloneTypedArray.js"}],"generated":{"js":"var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","map":null},"hash":"9e070867c17ddb9200aed876fd920891","cacheData":{"env":{}}}