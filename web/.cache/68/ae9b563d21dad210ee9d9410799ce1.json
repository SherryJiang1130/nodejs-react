{"id":"../node_modules/lodash/_baseMap.js","dependencies":[{"name":"D:\\myPro\\nodePro\\web\\package.json","includedInParent":true,"mtime":1543199527068},{"name":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1542352705058},{"name":"./_baseEach","loc":{"line":1,"column":23},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_baseMap.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_baseEach.js"},{"name":"./isArrayLike","loc":{"line":2,"column":26},"parent":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\_baseMap.js","resolved":"D:\\myPro\\nodePro\\web\\node_modules\\lodash\\isArrayLike.js"}],"generated":{"js":"var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","map":null},"hash":"acb465e756c59e80bacf8bf8fb6d3748","cacheData":{"env":{}}}